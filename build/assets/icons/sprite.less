/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-arrow-gray-name: 'icon-arrow-gray';
@icon-arrow-gray-x: 58px;
@icon-arrow-gray-y: 89px;
@icon-arrow-gray-offset-x: -58px;
@icon-arrow-gray-offset-y: -89px;
@icon-arrow-gray-width: 17px;
@icon-arrow-gray-height: 19px;
@icon-arrow-gray-total-width: 116px;
@icon-arrow-gray-total-height: 108px;
@icon-arrow-gray-image: '../assets/icons/sprite.png';
@icon-arrow-gray: 58px 89px -58px -89px 17px 19px 116px 108px '../assets/icons/sprite.png' 'icon-arrow-gray';
@icon-arrow-green-name: 'icon-arrow-green';
@icon-arrow-green-x: 85px;
@icon-arrow-green-y: 89px;
@icon-arrow-green-offset-x: -85px;
@icon-arrow-green-offset-y: -89px;
@icon-arrow-green-width: 17px;
@icon-arrow-green-height: 19px;
@icon-arrow-green-total-width: 116px;
@icon-arrow-green-total-height: 108px;
@icon-arrow-green-image: '../assets/icons/sprite.png';
@icon-arrow-green: 85px 89px -85px -89px 17px 19px 116px 108px '../assets/icons/sprite.png' 'icon-arrow-green';
@icon-arrow-white-name: 'icon-arrow-white';
@icon-arrow-white-x: 0px;
@icon-arrow-white-y: 0px;
@icon-arrow-white-offset-x: 0px;
@icon-arrow-white-offset-y: 0px;
@icon-arrow-white-width: 38px;
@icon-arrow-white-height: 39px;
@icon-arrow-white-total-width: 116px;
@icon-arrow-white-total-height: 108px;
@icon-arrow-white-image: '../assets/icons/sprite.png';
@icon-arrow-white: 0px 0px 0px 0px 38px 39px 116px 108px '../assets/icons/sprite.png' 'icon-arrow-white';
@icon-facebook-name: 'icon-facebook';
@icon-facebook-x: 48px;
@icon-facebook-y: 0px;
@icon-facebook-offset-x: -48px;
@icon-facebook-offset-y: 0px;
@icon-facebook-width: 29px;
@icon-facebook-height: 30px;
@icon-facebook-total-width: 116px;
@icon-facebook-total-height: 108px;
@icon-facebook-image: '../assets/icons/sprite.png';
@icon-facebook: 48px 0px -48px 0px 29px 30px 116px 108px '../assets/icons/sprite.png' 'icon-facebook';
@icon-fax-name: 'icon-fax';
@icon-fax-x: 0px;
@icon-fax-y: 89px;
@icon-fax-offset-x: 0px;
@icon-fax-offset-y: -89px;
@icon-fax-width: 19px;
@icon-fax-height: 19px;
@icon-fax-total-width: 116px;
@icon-fax-total-height: 108px;
@icon-fax-image: '../assets/icons/sprite.png';
@icon-fax: 0px 89px 0px -89px 19px 19px 116px 108px '../assets/icons/sprite.png' 'icon-fax';
@icon-instagram-name: 'icon-instagram';
@icon-instagram-x: 87px;
@icon-instagram-y: 0px;
@icon-instagram-offset-x: -87px;
@icon-instagram-offset-y: 0px;
@icon-instagram-width: 29px;
@icon-instagram-height: 30px;
@icon-instagram-total-width: 116px;
@icon-instagram-total-height: 108px;
@icon-instagram-image: '../assets/icons/sprite.png';
@icon-instagram: 87px 0px -87px 0px 29px 30px 116px 108px '../assets/icons/sprite.png' 'icon-instagram';
@icon-linkedin-name: 'icon-linkedin';
@icon-linkedin-x: 0px;
@icon-linkedin-y: 49px;
@icon-linkedin-offset-x: 0px;
@icon-linkedin-offset-y: -49px;
@icon-linkedin-width: 29px;
@icon-linkedin-height: 30px;
@icon-linkedin-total-width: 116px;
@icon-linkedin-total-height: 108px;
@icon-linkedin-image: '../assets/icons/sprite.png';
@icon-linkedin: 0px 49px 0px -49px 29px 30px 116px 108px '../assets/icons/sprite.png' 'icon-linkedin';
@icon-placeholder-name: 'icon-placeholder';
@icon-placeholder-x: 78px;
@icon-placeholder-y: 49px;
@icon-placeholder-offset-x: -78px;
@icon-placeholder-offset-y: -49px;
@icon-placeholder-width: 20px;
@icon-placeholder-height: 20px;
@icon-placeholder-total-width: 116px;
@icon-placeholder-total-height: 108px;
@icon-placeholder-image: '../assets/icons/sprite.png';
@icon-placeholder: 78px 49px -78px -49px 20px 20px 116px 108px '../assets/icons/sprite.png' 'icon-placeholder';
@icon-telephone-name: 'icon-telephone';
@icon-telephone-x: 29px;
@icon-telephone-y: 89px;
@icon-telephone-offset-x: -29px;
@icon-telephone-offset-y: -89px;
@icon-telephone-width: 19px;
@icon-telephone-height: 19px;
@icon-telephone-total-width: 116px;
@icon-telephone-total-height: 108px;
@icon-telephone-image: '../assets/icons/sprite.png';
@icon-telephone: 29px 89px -29px -89px 19px 19px 116px 108px '../assets/icons/sprite.png' 'icon-telephone';
@icon-twitter-name: 'icon-twitter';
@icon-twitter-x: 39px;
@icon-twitter-y: 49px;
@icon-twitter-offset-x: -39px;
@icon-twitter-offset-y: -49px;
@icon-twitter-width: 29px;
@icon-twitter-height: 30px;
@icon-twitter-total-width: 116px;
@icon-twitter-total-height: 108px;
@icon-twitter-image: '../assets/icons/sprite.png';
@icon-twitter: 39px 49px -39px -49px 29px 30px 116px 108px '../assets/icons/sprite.png' 'icon-twitter';
@spritesheet-width: 116px;
@spritesheet-height: 108px;
@spritesheet-image: '../assets/icons/sprite.png';
@spritesheet-sprites: @icon-arrow-gray @icon-arrow-green @icon-arrow-white @icon-facebook @icon-fax @icon-instagram @icon-linkedin @icon-placeholder @icon-telephone @icon-twitter;
@spritesheet: 116px 108px '../assets/icons/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(%a)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
